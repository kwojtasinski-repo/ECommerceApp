@model ECommerceApp.Application.ViewModels.Customer.NewCustomerVm

@{
    ViewData["Title"] = "AddCustomer";
}

<h1>Tworznie nowego klienta</h1>

<div>
    <a asp-controller="Item" asp-action="Index">Powrót do listy przedmiotów</a>
</div>
<hr />
<form id="customerForm" asp-action="AddCustomer">
    <div class="form-row mb-2">
        <div class="col-md-8 ">
            <div class="form-row">
                <h4>Dane osobowe</h4>
            </div>
            <div class="form-row">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" class="form-control" />
                <input type="hidden" asp-for="UserId" class="form-control" />
                <div class="col-md-6 mb-3">
                    <label asp-for="FirstName" class="control-label">Imię</label>
                    <input id="CustomerFirstNameInput" asp-for="FirstName" class="form-control" />
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="LastName" class="control-label">Nazwisko</label>
                    <input id="CustomerLastNameInput" asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input id="CompanyEnter" class="form-check-input" asp-for="IsCompany" onchange="toggleCheckbox(this)" /> Firma
                </label>
            </div>
            <div id="CompanyData" class="form-row" style="display:none;">
                <div class="col-md-3 mb-3">
                    <label asp-for="NIP" class="control-label"></label>
                    <input id="NIPInput" asp-for="NIP" class="form-control" />
                    <span asp-validation-for="NIP" class="text-danger"></span>
                </div>
                <div class="col-md-3 mb-3"></div>
                <div class="col-md-6 mb-3">
                    <label asp-for="CompanyName" class="control-label">Nazwa firmy</label>
                    <input id="CompanyInput" asp-for="CompanyName" class="form-control" />
                    <span asp-validation-for="CompanyName" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="form-row mb-2">
        <div class="col-xs-10" id="ContactDetails">
            <h4>Dane kontaktowe</h4><br />
            <div class="row col-8 mb-2">
                <input type="hidden" asp-for="ContactDetails[0].CustomerId" value="@Model.Id" />
                <label class="col-form-label col-sm-10 pt-0">Rodzaj kontaktu</label>
                <div id="ContactDetailType">
                    <div class="custom-control custom-radio custom-control-inline">
                        <input asp-for="ContactDetails[0].ContactDetailTypeId" type="radio" id="1" value="1" name="ContactDetailType" class="custom-control-input">
                        <label class="custom-control-label" for="1">Telefon</label>
                        <input type="hidden" asp-for="ContactDetails[0].ContactDetailTypeId" class="form-control" value="1" />
                    </div>
                    <div class="custom-control custom-radio custom-control-inline">
                        <input asp-for="ContactDetails[0].ContactDetailTypeId" type="radio" id="2" value="2" name="ContactDetailType" class="custom-control-input">
                        <label class="custom-control-label" for="2">E-mail</label>
                        <input type="hidden" asp-for="ContactDetails[0].ContactDetailTypeId" class="form-control" value="2" />
                    </div>
                </div>
            </div>
            <div class="col-xs-6 mb-3">
                <label class="control-label">Dane kontaktowe</label>
                <input id="ContactDetailInformationInput" asp-for="ContactDetails[0].ContactDetailInformation" class="form-control" />
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-xs-6" id="Adresses">
            <div>
                <h4>Adres</h4><br />
                <div>
                    <label asp-for="Addresses[0].Street" class="control-label">Ulica</label>
                    <input id="AddressStreetInput" asp-for="Addresses[0].Street" class="form-control" />
                    <span asp-validation-for="Addresses[0].Street" class="text-danger"></span>
                </div>
                <div>
                    <label asp-for="Addresses[0].BuildingNumber" class="control-label">Numer budynku</label>
                    <input id="AddressBuildingNumber" asp-for="Addresses[0].BuildingNumber" class="form-control" />
                    <span asp-validation-for="Addresses[0].BuildingNumber" class="text-danger"></span>
                </div>
                <div>
                    <label asp-for="Addresses[0].FlatNumber" class="control-label">Numer mieszkania</label>
                    <input id="AddressFlatNumberInput" asp-for="Addresses[0].FlatNumber" class="form-control" />
                    <span asp-validation-for="Addresses[0].FlatNumber" class="text-danger"></span>
                </div>
                <div>
                    <label asp-for="Addresses[0].ZipCode" class="control-label">Kod pocztowy</label>
                    <input id="AddressZipCodeInput" asp-for="Addresses[0].ZipCode" class="form-control" />
                    <span asp-validation-for="Addresses[0].ZipCode" class="text-danger"></span>
                </div>
                <div>
                    <label asp-for="Addresses[0].City" class="control-label">Miasto</label>
                    <input id="AddressCityInput" asp-for="Addresses[0].City" class="form-control" />
                    <span asp-validation-for="Addresses[0].City" class="text-danger"></span>
                </div>
                <div>
                    <label asp-for="Addresses[0].Country" class="control-label">Województwo</label>
                    <input id="AddressCountryInput" asp-for="Addresses[0].Country" class="form-control" />
                    <span asp-validation-for="Addresses[0].Country" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group mt-2">
        <input type="submit" value="Utwórz" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    <script>
        const customerFormValidator = {
            formId: "customerForm",
            customer: {
                hasCompany: false,
                firstName: {
                    controlId: 'CustomerFirstNameInput',
                    rules: [
                        (v) => v && v.trim().length > 0 || 'Imie jest wymagane',
                        (v) => v && v.trim().length > 2 || 'Imie powinno mieć więcej niż 2 znaki'
                    ],
                    valid: false,
                    value: ''
                },
                lastName: {
                    controlId: 'CustomerLastNameInput',
                    rules: [
                        (v) => v && v.trim().length > 0 || 'Nazwisko jest wymagane',
                        (v) => v && v.trim().length > 2 || 'Nazwisko powinno mieć więcej niż 2 znaki'
                    ],
                    valid: false,
                    value: ''
                },
                nip: {
                    controlId: 'NIPInput',
                    rules: [
                        (v) => !customerFormValidator.customer.hasCompany || (v && v.trim().length > 0) || 'NIP jest wymagany',
                    ],
                    valid: false,
                    value: ''
                },
                companyName: {
                    controlId: 'CompanyInput',
                    rules: [
                        (v) => !customerFormValidator.customer.hasCompany || (v && v.trim().length > 0) || 'Nazwa firmy jest wymagana',
                    ],
                    valid: false,
                    value: ''
                },
                contactDetailType: {
                    controlId: "ContactDetailType",
                    controlName: "ContactDetailType",
                    rules: [
                        v => v && v.trim().length > 0 || 'Rodzaj kontaktu jest wymagany'
                    ],
                    valid: false,
                    value: '',
                    onChange: function (event) {
                        this.value = event.value;
                        const text = this.rules[0](this.value);
                        forms.showValidationError(this.controlId, text && text.length > 0 && text.trim().length > 0 ? text : '');
                    }
                },
                contactDetailInformation: {
                    controlId: "ContactDetailInformationInput",
                    rules: [
                        v => v && v.trim().length > 0 || 'Dane kontaktowe są wymagane',
                    ],
                    valid: false,
                    value: ''
                },
                addressStreet: {
                    controlId: "AddressStreetInput",
                    rules: [
                        v => v && v.trim().length > 0 || 'Ulica jest wymagana',
                    ],
                    valid: false,
                    value: ''
                },
                addressBuildingNumber: {
                    controlId: "AddressBuildingNumber",
                    rules: [
                        v => v && v.trim().length > 0 || 'Nr budynku jest wymagany',
                    ],
                    valid: false,
                    value: ''
                },
                addressFlatNumber: {
                    controlId: "AddressFlatNumberInput",
                    rules: [],
                    valid: false,
                    value: ''
                },
                addressZipCode: {
                    controlId: "AddressZipCodeInput",
                    rules: [
                        v => v && v.trim().length > 0 || 'Kod pocztowy jest wymagany',
                        v => v && !isNaN(v) && Number(v) > 0 || 'Kod pocztowy jest niepoprawny'
                    ],
                    valid: false,
                    value: ''
                },
                addressCity: {
                    controlId: "AddressCityInput",
                    rules: [
                        v => v && v.trim().length > 0 || 'Miasto jest wymagane',
                    ],
                    valid: false,
                    value: ''
                },
                addressCountry: {
                    controlId: "AddressCountryInput",
                    rules: [
                        v => v && v.trim().length > 0 || 'Województwo jest wymagane',
                    ],
                    valid: false,
                    value: ''
                }
            }
        }

        $(document).ready(function () {
            forms.initFormValidator(customerFormValidator);
        });

        function toggleCheckbox(element) {
            if (element.checked) {
                customerFormValidator.customer.hasCompany = true;
                $('#CompanyData').css("display", "block");
            }
            else {
                customerFormValidator.customer.hasCompany = false;
                $('#CompanyData').css("display", "none");
                document.getElementById("NIPInput").value = "";
                document.getElementById("CompanyInput").value = "";
            }
        }
    </script>

}
