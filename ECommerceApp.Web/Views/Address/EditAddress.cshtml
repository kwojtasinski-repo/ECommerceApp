@model ECommerceApp.Application.ViewModels.Address.AddressVm

@{
    ViewData["Title"] = "EditAddress";
}

<h1>Edycja adresu</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form id="addressForm" asp-action="EditAddress">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" class="form-control" />
            <div class="form-group">
                <label asp-for="Address.Street" class="control-label">Ulica</label>
                <input id="StreetName" asp-for="Address.Street" class="form-control" />
                <span asp-validation-for="Address.Street" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address.BuildingNumber" class="control-label">Numer budynku</label>
                <input id="BuildingNumber" asp-for="Address.BuildingNumber" class="form-control" />
                <span asp-validation-for="Address.BuildingNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address.FlatNumber" class="control-label">Numer mieszkania</label>
                <input id="FlatNumber" asp-for="Address.FlatNumber" class="form-control" />
                <span asp-validation-for="Address.FlatNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address.ZipCode" class="control-label">Kod pocztowy</label>
                <input id="ZipCode" asp-for="Address.ZipCode" class="form-control" />
                <span asp-validation-for="Address.ZipCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address.City" class="control-label">Miasto</label>
                <input id="CityName" asp-for="Address.City" class="form-control" />
                <span asp-validation-for="Address.City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address.Country" class="control-label">Kraj</label>
                <input id="CountryName" asp-for="Address.Country" class="form-control" />
                <span asp-validation-for="Address.Country" class="text-danger"></span>
            </div>
                <input type="hidden" asp-for="Address.CustomerId" class="form-control" />
            <div class="form-group">
                <input type="submit" value="Zatwierdź" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-route-id="@Model.Address.CustomerId" asp-action="EditCustomer" asp-controller="Customer">Powrót do danych kontaktowych</a>
</div>

@section Scripts {
    <script>

        const addressFormValidator = {
            formId: "addressForm",
            streetName: {
                controlId: 'StreetName',
                rules: [
                    v => v && v.trim().length > 0 || 'Ulica jest wymagana',
                ],
                valid: false,
                value: ''
            },
            buildingNumber: {
                controlId: 'BuildingNumber',
                rules: [
                    v => v && v.trim().length > 0 || 'Nr budynku jest wymagany',
                    v => !isNaN(v) && Number(v) > 0 || 'Nr budynku jest niepoprawny'
                ],
                valid: false,
                value: ''
            },
            flatNumber: {
                controlId: 'FlatNumber',
                rules: [],
                valid: false,
                value: ''
            },
            zipCode: {
                controlId: 'ZipCode',
                rules: [
                    v => v && v.trim().length > 0 || 'Kod pocztowy jest wymagany',
                    v => v && !isNaN(v) && Number(v) > 0 || 'Kod pocztowy jest niepoprawny'
                ],
                valid: false,
                value: ''
            },
            city: {
                controlId: 'CityName',
                rules: [
                    v => v && v.trim().length > 0 || 'Miasto jest wymagane'
                ],
                valid: false,
                value: ''
            },
            country: {
                controlId: 'CountryName',
                rules: [
                    v => v && v.trim().length > 0 || 'Województwo jest wymagane'
                ],
                valid: false,
                value: ''
            }
        };

        $(document).ready(function () {
            forms.initFormValidator(addressFormValidator);
            initForm();
        });

        function initForm() {
            addressFormValidator.streetName.value = document.querySelector('#' + addressFormValidator.streetName.controlId).value;
            addressFormValidator.buildingNumber.value = document.querySelector('#' + addressFormValidator.buildingNumber.controlId).value;
            addressFormValidator.flatNumber.value = document.querySelector('#' + addressFormValidator.flatNumber.controlId).value;
            addressFormValidator.zipCode.value = document.querySelector('#' + addressFormValidator.zipCode.controlId).value;
            addressFormValidator.city.value = document.querySelector('#' + addressFormValidator.city.controlId).value;
            addressFormValidator.country.value = document.querySelector('#' + addressFormValidator.country.controlId).value;
        }
    </script>
}
