@model ECommerceApp.Application.ViewModels.User.NewUserVm

@{
    ViewData["Title"] = "Zmiana hasła";
}

<h1>Zmiana hasła</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form id="changeUserPasswordForm" asp-action="ChangeUserPassword">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" class="form-control" />
            <div class="form-group">
                <label asp-for="UserName" class="control-label">Nazwa użytkownika</label>
                <input readonly asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label">Email</label>
                <input readonly asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="EmailConfirmed" onclick="return false;" /> Potwierdzony email
                </label>
            </div>
            <div class="form-group">
                <label asp-for="PasswordToChange" class="control-label">Nowe hasło</label>
                <input id="PasswordInput" type="password" asp-for="PasswordToChange" class="form-control" />
                <span asp-validation-for="PasswordToChange" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Akceptuj" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Powrót do listy użytkowników</a>
</div>

@section Scripts {
    <script>

        const changeUserPasswordFormValidator = {
            formId: "changeUserPasswordForm",
            password: {
                controlId: 'PasswordInput',
                rules: [
                    v => v && v.trim().length > 0 || 'Hasło jest wymagane',
                    v => v && passwordRegex.test(v) || 'Hasło powinno zawierać 8 znaków w tym dużą i małą literę, cyfrę oraz znak specjalny',
                ],
                valid: false,
                value: ''
            }
        };


        $(document).ready(function () {
            forms.initFormValidator(changeUserPasswordFormValidator);
        });
    </script>
}
