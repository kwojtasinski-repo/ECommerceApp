@model ECommerceApp.Application.ViewModels.OrderItem.ListForOrderItemVm

@{
    ViewData["Title"] = "ShowMyCard";
}

<h1>Koszyk</h1>

<p>
    <a asp-controller="Item" asp-action="Index">Wróć do listy przedmiotów</a>
</p>
<table id="search-form" class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Id przedmiotu
            </th>
            <th>
                Nazwa przedmiotu
            </th>
            <th>
                Ilość
            </th>
            <th>
                Id użytkownika
            </th>
            <th>
                Użytkownik
            </th>
            <th>
                Id zamówienia
            </th>
            <th>
                Id kuponu
            </th>
            <th>
                Id zwrotu
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var orderItem in Model.ItemOrders)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => orderItem.Id)
                </td>
                <td>
                    @Html.DisplayFor(model => orderItem.ItemId)
                </td>
                <td>
                    @Html.DisplayFor(model => orderItem.ItemName)
                </td>
                <td style="width:100px;">
                    <div class="row">
                        @using Newtonsoft.Json;
                        <a><i style="margin-right:5px;" onclick="AddQuantity(@JsonConvert.SerializeObject(orderItem))" id="OrderItemAddQuantity" class="fas fa-plus-circle ml-2 fa_custom"></i></a>
                        @Html.DisplayFor(model => orderItem.ItemOrderQuantity)
                        <a><i onclick="RemoveQuantity(@JsonConvert.SerializeObject(orderItem))" class="fa fa-minus-circle ml-2 fa_custom" id="OrderItemRemoveQuantity"></i></a>
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(model => orderItem.UserId)
                </td>
                <td>
                    @User.Identity.Name
                </td>
                <td>
                    @Html.DisplayFor(model => orderItem.OrderId)
                </td>
                <td>
                    @Html.DisplayFor(model => orderItem.CouponUsedId)
                </td>
                <td>
                    @Html.DisplayFor(model => orderItem.RefundId)
                </td>
                <td>
                    <a style="color: #0366d6; cursor: pointer;" onclick="RemoveItemFromCart(@orderItem.Id)">Usuń</a>
                </td>
            </tr>
        }
    </tbody>
</table>
 <div class="row">
    <table>
        <tr>
            @for (int i = 1; i <= Math.Ceiling(Model.Count / (double)Model.PageSize); i++)
            {
                <td>
                    @if (i != Model.CurrentPage)
                    {
                        <a href='javascript:PagerClick(@i, "search-form")'>@i</a>
                    }
                    else
                    {
                        <span>@i</span>
                    }
                </td>
            }
        </tr>
    </table>
</div>
<input type="hidden" name="pageNo" id="pageNo" />
<input type="hidden" name="pageSize" id="pageSize" value="20" />

<div class="form-group">
    <a asp-controller="Order" asp-action="OrderRealization"><input type="button" readonly value="Zrealizuj zamówienie" class="btn btn-primary" /></a>
    <a asp-controller="Item" asp-action="Index"><input type="button" readonly value="Zrealizuj później" class="btn btn-primary" /></a>
</div>

<script>
    async function AddQuantity(object) {
        object.ItemOrderQuantity += 1;
        var objectJson = JSON.stringify(object);
        await ajaxRequest.send("/OrderItem/UpdateOrderItem", "POST", objectJson, "application/json", "json");
        location.reload();
    }

    async function RemoveQuantity(object) {
        if (object.ItemOrderQuantity <= 1) {
            return;
        }

        object.ItemOrderQuantity -= 1;
        const objectJson = JSON.stringify(object);
        await ajaxRequest.send("/OrderItem/UpdateOrderItem", "POST", objectJson, "application/json", "json");
        location.reload();
    }

    async function RemoveItemFromCart(itemId) {
        try {
            await ajaxRequest.send("/OrderItem/DeleteOrderItem", "GET", { "id": itemId }, "application/json", "json");
            location.reload();
        } catch (error) {
            if (error.status === statusCodes.Unauthorized) {
                window.location.href = "Identity/Account/Login";
            }
        }
     }
</script>
<style type="text/css">
    .fa_custom {
        color: #0077cc;
        cursor: pointer;
    }
</style>
