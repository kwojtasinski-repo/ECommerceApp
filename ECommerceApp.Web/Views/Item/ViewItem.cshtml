@using ECommerceApp.Infrastructure.Permissions;
@model ECommerceApp.Application.ViewModels.Item.ItemDetailsVm

@{
    ViewData["Title"] = "ViewItem";
}
<div class="d-flex justify-content-lg-between">
    <div>
        <h1>Sczegóły przedmiotu</h1>
    </div>
    <div style="cursor: pointer; display: flex; align-items: center;">
        <i class="fa-solid fa-cart-plus fa-2x" data-toggle="tooltip" title="Dodaj do koszyka" onclick="addToCart()"></i>
    </div>
</div>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            <input type="hidden" id="ItemId" asp-for="Id" />
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Cost)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Cost)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Warranty)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Warranty)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Quantity)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BrandId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BrandId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BrandName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BrandName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TypeId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TypeId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TypeName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TypeName)
        </dd>

    </dl>
    @if (Model.ItemTags.Count > 0)
    {
        <div class="col">
            <table class="table table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            Id przedmiotu
                        </th>
                        <th>
                            Nazwa przedmiotu
                        </th>
                        <th>
                            Id taga
                        </th>
                        <th>
                            Nazwa taga
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tag in Model.ItemTags)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(model => tag.ItemId)
                            <td>
                                @Html.DisplayFor(model => tag.ItemName)
                            </td>
                            <td>
                                @Html.DisplayFor(model => tag.TagId)
                            <td>
                                @Html.DisplayFor(model => tag.TagName)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    @if (Model.Images.Count > 0)
    {
        <br />
        <h4>Obrazki</h4>
        @foreach (var image in Model.Images)
        {
            <div>
                <img src="data:image;base64,@System.Convert.ToBase64String(image.ImageSource)" style="display: block; width: auto; max-width: 300px; height: auto; max-height: 300px" />
            </div>
        }
    }
</div>


<div>
    @if (User.IsInRole(UserPermissions.Roles.Administrator) || User.IsInRole(UserPermissions.Roles.Manager) || User.IsInRole(UserPermissions.Roles.Service))
    {
        @Html.ActionLink("Edytuj", "EditItem", new { id = Model.Id }) @(' ')@('|')@(' ')
    }
    <a asp-action="Index">Wróć do listy przedmiotów</a> |
    @Html.ActionLink("Lista zamówień", "ShowOrderItemsByItemId", "OrderItem", new { itemId = Model.Id })
    | <a class="anchor-link" onclick="addToCart()">Dodaj do koszyka</a>
</div>

@section Scripts
{
    <script>
        async function addToCart() {
            const id = document.querySelector('#ItemId').value;
            try {
                await ajaxRequest.send("/OrderItem/AddToCart", "POST", JSON.stringify({
                    "ItemId": id,
                    "ItemOrderQuantity": 1
                }), "application/json");
                location.reload();
            } catch (error) {
                if (error.status === statusCodes.Unauthorized) {
                    window.location.href = "Identity/Account/Login";
                }
            }
        }
    </script>
}
